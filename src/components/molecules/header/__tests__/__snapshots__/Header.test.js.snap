// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header component should renders without crash 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    navItems={
      Array [
        Object {
          "path": "/",
          "text": "Work with coffee",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="ui container"
      >
        <a
          className="hb-logo"
          href="/"
        >
          Help Brumadinho
        </a>
        <button
          className="menu-toggle"
          id="btnMenu"
          type="button"
        >
          <div
            className="one"
          />
          <div
            className="two"
          />
          <div
            className="three"
          />
        </button>
        <nav
          className="hb-menu"
        >
          <Link
            className="item"
            replace={false}
            to="/"
          >
            Work with coffee
          </Link>
        </nav>
      </div>,
      "className": "fixed-top hb-header",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <a
            className="hb-logo"
            href="/"
          >
            Help Brumadinho
          </a>,
          <button
            className="menu-toggle"
            id="btnMenu"
            type="button"
          >
            <div
              className="one"
            />
            <div
              className="two"
            />
            <div
              className="three"
            />
          </button>,
          <nav
            className="hb-menu"
          >
            <Link
              className="item"
              replace={false}
              to="/"
            >
              Work with coffee
            </Link>
          </nav>,
        ],
        "className": "ui container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Help Brumadinho",
            "className": "hb-logo",
            "href": "/",
          },
          "ref": null,
          "rendered": "Help Brumadinho",
          "type": "a",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="one"
              />,
              <div
                className="two"
              />,
              <div
                className="three"
              />,
            ],
            "className": "menu-toggle",
            "id": "btnMenu",
            "type": "button",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "one",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "two",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "three",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
          ],
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Link
                className="item"
                replace={false}
                to="/"
              >
                Work with coffee
              </Link>,
            ],
            "className": "hb-menu",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "/",
              "nodeType": "class",
              "props": Object {
                "children": "Work with coffee",
                "className": "item",
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": "Work with coffee",
              "type": [Function],
            },
          ],
          "type": "nav",
        },
      ],
      "type": "div",
    },
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="ui container"
        >
          <a
            className="hb-logo"
            href="/"
          >
            Help Brumadinho
          </a>
          <button
            className="menu-toggle"
            id="btnMenu"
            type="button"
          >
            <div
              className="one"
            />
            <div
              className="two"
            />
            <div
              className="three"
            />
          </button>
          <nav
            className="hb-menu"
          >
            <Link
              className="item"
              replace={false}
              to="/"
            >
              Work with coffee
            </Link>
          </nav>
        </div>,
        "className": "fixed-top hb-header",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <a
              className="hb-logo"
              href="/"
            >
              Help Brumadinho
            </a>,
            <button
              className="menu-toggle"
              id="btnMenu"
              type="button"
            >
              <div
                className="one"
              />
              <div
                className="two"
              />
              <div
                className="three"
              />
            </button>,
            <nav
              className="hb-menu"
            >
              <Link
                className="item"
                replace={false}
                to="/"
              >
                Work with coffee
              </Link>
            </nav>,
          ],
          "className": "ui container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Help Brumadinho",
              "className": "hb-logo",
              "href": "/",
            },
            "ref": null,
            "rendered": "Help Brumadinho",
            "type": "a",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="one"
                />,
                <div
                  className="two"
                />,
                <div
                  className="three"
                />,
              ],
              "className": "menu-toggle",
              "id": "btnMenu",
              "type": "button",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "one",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "two",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "three",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
            ],
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Link
                  className="item"
                  replace={false}
                  to="/"
                >
                  Work with coffee
                </Link>,
              ],
              "className": "hb-menu",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "/",
                "nodeType": "class",
                "props": Object {
                  "children": "Work with coffee",
                  "className": "item",
                  "replace": false,
                  "to": "/",
                },
                "ref": null,
                "rendered": "Work with coffee",
                "type": [Function],
              },
            ],
            "type": "nav",
          },
        ],
        "type": "div",
      },
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
